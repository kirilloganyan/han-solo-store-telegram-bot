const TelegramApi = require('node-telegram-bot-api')
const {getCurrency} = require("./api");
const token = '7393715479:AAGk1vCiSra6XAK94mzAsPSyl_gxf-W7RVY'

const bot = new TelegramApi(token, {polling: true})

const categoryOptions = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [
                {text: '–ö—Ä–æ—Å—Å–æ–≤–∫–∏ ', callback_data: 'sneakers'},
                {text: '–°–≤–∏—Ç—à–æ—Ç ', callback_data: 'sweatshirt'},
                {text: '–õ–æ–Ω–≥—Å–ª–∏–≤ ', callback_data: 'longSleeve'},
                {text: '–§—É—Ç–±–æ–ª–∫–∞ ', callback_data: 't-shirt'}
            ]
        ]
    })
}

const userState = {};
let deliveryTax = 0;
let category = '';

const start = () => {
    bot.setMyCommands([
        {command: '/start', description: '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å'},
        {command: '/course', description: '–£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞'}
    ])
    bot.on('message', async(msg) =>  {
        const text = msg.text;
        const chatId = msg.chat.id;
        const currency = await getCurrency();
        if(text === '/start'){
            userState[chatId] = 'waiting_for_category';
            return bot.sendMessage(chatId,
                '–ü—Ä–∏–≤–µ—Ç,–Ø –±–æ—Ç Solo Store!\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞',
                categoryOptions);
        }
        if(text === '/course') {
           return bot.sendMessage(chatId, `–ö—É—Ä—Å —é–∞–Ω—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è <b>${currency.value.toFixed(2)}</b>üá®üá≥`, { parse_mode: 'HTML' })
        }
        if(userState[chatId] === 'waiting_for_category'){
            return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏', categoryOptions);
        }
            if(userState[chatId] === 'waiting_for_sum'){
            if(!isNaN(Number(text)))
            return bot.sendMessage(chatId, `–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ —Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ ‚âà ${Math.floor(Number(text) * currency.value + deliveryTax)}—Ä—É–±.\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–∫–∞–∑—É:\n–ö–æ–º–∏—Å—Å–∏—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞: ${500} —Ä—É–±. \n–¶–µ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–∞: ${Math.floor(deliveryTax)} (—É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞ –≤ –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å)\n–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å —é–∞–Ω—è: ${currency.value.toFixed(2)}\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞: ${category}`);
            else {
                userState[chatId] = 'waiting_for_sum';
                return bot.sendMessage(chatId,'–ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ')
            }
        }
         return bot.sendMessage(chatId, `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞`)
    })

    bot.on('callback_query', async(response) => {
        const data = response.data;
        const msg = response.message;
        const chatId = msg.chat.id;
        switch (userState[chatId]) {
            case 'waiting_for_category':
                switch (data) {
                    case 'sneakers':
                        userState[chatId] = 'waiting_for_sum';
                        deliveryTax=1500;
                        category = '–ö—Ä–æ—Å—Å–æ–≤–∫–∏';
                        return bot.sendMessage(chatId, '–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ <b>–Æ–ê–ù–Ø–•</b> üá®üá≥', {parse_mode: 'HTML'});
                    case 'sweatshirt':
                        userState[chatId] = 'waiting_for_sum';
                        deliveryTax=900;
                        category = '–°–≤–∏—Ç—à–æ—Ç';
                        return bot.sendMessage(chatId, '–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ <b>–Æ–ê–ù–Ø–•</b> üá®üá≥', {parse_mode: 'HTML'});
                    case 'longSleeve':
                        userState[chatId] = 'waiting_for_sum';
                        deliveryTax=700;
                        category = '–õ–æ–Ω–≥—Å–ª–∏–≤';
                        return bot.sendMessage(chatId, '–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ <b>–Æ–ê–ù–Ø–•</b> üá®üá≥', {parse_mode: 'HTML'});
                    case 't-shirt':
                        userState[chatId] = 'waiting_for_sum';
                        deliveryTax=500;
                        category = '–§—É—Ç–±–æ–ª–∫–∞';
                        return bot.sendMessage(chatId, '–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ <b>–Æ–ê–ù–Ø–•</b> üá®üá≥', {parse_mode: 'HTML'});
                    default:
                        return bot.sendMessage(chatId, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
                }
            }
    })
}
start();